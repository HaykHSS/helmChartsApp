apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: build-and-sync-sensor
  namespace: argo-events
spec:
  template:
    serviceAccountName: operate-workflow-sa
  dependencies:
    - name: test-dep
      eventSourceName: webhook
      eventName: for-testing
  triggers:
    - template:
        name: build-and-sync-template
        argoWorkflow:
          operation: submit
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: build-and-sync-
                namespace: argo
              spec:
                entrypoint: build-and-sync
                arguments:
                  parameters:
                    - name: tag
                      value: default-tag
                volumes:
                  - name: workdir
                    emptyDir: {}
                  - name: docker-config
                    secret:
                      secretName: kaniko-docker-config
                  - name: argocd-secret
                    secret:
                      secretName: argocd-secret
                templates:
                  - name: build-and-sync
                    steps:
                      - - name: build-and-push-image
                          template: build-and-push-image
                          arguments:
                            parameters:
                              - name: tag
                                value: "{{workflow.parameters.tag}}"
                      - - name: update-application-yaml
                          template: update-application-yaml
                          arguments:
                            parameters:
                              - name: tag
                                value: "{{workflow.parameters.tag}}"

                  - name: build-and-push-image
                    inputs:
                      parameters:
                        - name: tag
                    container:
                      image: gcr.io/kaniko-project/executor:latest
                      args:
                        - "--dockerfile=helmChartsApp-main/hello-world-backend/Dockerfile"
                        - "--context=https://github.com/HaykHSS/helmChartsApp/archive/refs/heads/main.tar.gz"
                        - "--destination=haykhs/backend-image:{{inputs.parameters.tag}}"
                        - "--insecure"
                      volumeMounts:
                        - name: workdir
                          mountPath: /mnt/data
                        - name: docker-config
                          mountPath: /kaniko/.docker

                  - name: update-application-yaml
                    inputs:
                      parameters:
                        - name: tag
                    container:
                      image: alpine:3.14
                      command: [sh, -c]
                      args: [
                        "apk --no-cache add git && \
                        git clone https://github.com/HaykHSS/helmChartsApp repo && \
                        cd repo && \
                        sed -i 's/tag: .*/tag: {{inputs.parameters.tag}}/' argo/applications/application.yaml && \
                        git add argo/applications/application.yaml && \
                        git commit -m 'Update tag to {{inputs.parameters.tag}}' && \
                        git push https://${GIT_USERNAME}:${GIT_TOKEN}@https://github.com/HaykHSS/helmChartsApp"
                      ]
                      env:
                        - name: GIT_USERNAME
                          valueFrom:
                            secretKeyRef:
                              name: git-credentials
                              key: username
                        - name: GIT_TOKEN
                          valueFrom:
                            secretKeyRef:
                              name: git-credentials
                              key: token
          parameters:
            - src:
                dependencyName: test-dep
                dataKey: body.tag
              dest: spec.arguments.parameters.0.value
